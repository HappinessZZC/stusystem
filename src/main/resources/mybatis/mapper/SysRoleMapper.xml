<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lemonyangzw.stusystem.project.system.mapper.SysRoleMapper">
    <resultMap id="SysRoleResult" type="com.lemonyangzw.stusystem.project.system.domain.SysRole">
        <id column="role_id" jdbcType="BIGINT" property="roleId"/>
        <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
        <result column="role_key" jdbcType="VARCHAR" property="roleKey"/>
        <result column="role_sort" jdbcType="INTEGER" property="roleSort"/>
        <result column="data_scope" jdbcType="CHAR" property="dataScope"/>
        <result column="status" jdbcType="CHAR" property="status"/>
        <result column="del_flag" jdbcType="CHAR" property="delFlag"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
    </resultMap>
    <sql id="selectRoleVo">
        select distinct r.role_id,
                        r.role_name,
                        r.role_key,
                        r.role_sort,
                        r.data_scope,
                        r.status,
                        r.del_flag,
                        r.create_time,
                        r.remark
        from sys_role r
                     left join sys_user_role ur on ur.role_id = r.role_id
                     left join sys_user u on u.user_id = ur.user_id
                     left join sys_dept d on u.dept_id = d.dept_id
    </sql>
    <select id="selectByUserId" parameterType="java.lang.Long" resultMap="SysRoleResult">
        <include refid="selectRoleVo"/>
        where u.user_id = #{userId,jdbcType=BIGINT}
    </select>
    <select id="getRoleAll" resultMap="SysRoleResult">
        <include refid="selectRoleVo"/>
        where r.del_flag = '0'
        order by r.role_sort
    </select>

    <select id="selectRoleListByUserId" parameterType="Long" resultType="Integer">
        select r.role_id
        from sys_role r
        left join sys_user_role ur on ur.role_id = r.role_id
        left join sys_user u on u.user_id = ur.user_id
        where u.user_id = #{userId}
    </select>

    <select id="selectRoleList" parameterType="SysRole" resultMap="SysRoleResult">
        <include refid="selectRoleVo"/>
        where r.del_flag = '0'
        <if test="roleName != null and roleName != ''">
            AND r.role_name like concat('%', #{roleName}, '%')
        </if>
        <if test="status != null and status != ''">
            AND r.status = #{status}
        </if>
        <if test="roleKey != null and roleKey != ''">
            AND r.role_key like concat('%', #{roleKey}, '%')
        </if>
        <if test="beginTime != null and beginTime != ''">
            <!-- 开始时间检索 -->
            and date_format(r.create_time, '%y%m%d') &gt;= date_format(#{beginTime}, '%y%m%d')
        </if>
        <if test="endTime != null and endTime != ''">
            <!-- 结束时间检索 -->
            and date_format(r.create_time, '%y%m%d') &lt;= date_format(#{endTime}, '%y%m%d')
        </if>
        order by r.role_sort
    </select>

    <select id="checkRoleNameUnique" parameterType="String" resultMap="SysRoleResult">
        <include refid="selectRoleVo"/>
        where r.role_name=#{roleName}
    </select>

    <select id="checkRoleKeyUnique" parameterType="String" resultMap="SysRoleResult">
        <include refid="selectRoleVo"/>
        where r.role_key=#{roleKey}
    </select>

    <insert id="insertRole" parameterType="SysRole" useGeneratedKeys="true" keyProperty="roleId">
        insert into sys_role(
        <if test="roleId != null and roleId != 0">
            role_id,
        </if>
        <if test="roleName != null and roleName != ''">
            role_name,
        </if>
        <if test="roleKey != null and roleKey != ''">
            role_key,
        </if>
        <if test="roleSort != null and roleSort != ''">
            role_sort,
        </if>
        <if test="dataScope != null and dataScope != ''">
            data_scope,
        </if>
        <if test="status != null and status != ''">
            status,
        </if>
        <if test="remark != null and remark != ''">
            remark,
        </if>
        <if test="createBy != null and createBy != ''">
            create_by,
        </if>
        create_time
        )values(
        <if test="roleId != null and roleId != 0">
            #{roleId},
        </if>
        <if test="roleName != null and roleName != ''">
            #{roleName},
        </if>
        <if test="roleKey != null and roleKey != ''">
            #{roleKey},
        </if>
        <if test="roleSort != null and roleSort != ''">
            #{roleSort},
        </if>
        <if test="dataScope != null and dataScope != ''">
            #{dataScope},
        </if>
        <if test="status != null and status != ''">
            #{status},
        </if>
        <if test="remark != null and remark != ''">
            #{remark},
        </if>
        <if test="createBy != null and createBy != ''">
            #{createBy},
        </if>
        sysdate()
        )
    </insert>
</mapper>